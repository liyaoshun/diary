pip install torch==1.5.0+cu101 torchvision==0.6.0+cu101 -f https://download.pytorch.org/whl/torch_stable.html -i https://pypi.tuna.tsinghua.edu.cn/simple
pip install torch==1.7.1+cu110 torchvision==0.8.2+cu110 torchaudio==0.7.2 -f https://download.pytorch.org/whl/torch_stable.html -i http://mirrors.aliyun.com/pypi/simple/  --trusted-host mirrors.aliyun.com


-i http://pypi.douban.com/simple/ --trusted-host=pypi.douban.com/simple

-i http://mirrors.aliyun.com/pypi/simple/  --trusted-host mirrors.aliyun.com


pip install torch==1.12.1+cu113 torchvision==0.13.1+cu113 torchaudio==0.12.1 --extra-index-url https://download.pytorch.org/whl/cu113

conda install numpy pyyaml mkl cmake cffi

sudo find / -name  jetbrains

deb 缺少依赖时运行小面的命令:
sudo apt-get -f -y install



wps中文不能输入问题： 如果使用一段时间又出现了不能输入中文，就重新使用下面命令。注意要执行保存操作。
step1.  WPS文字
sudo gedit /usr/bin/wps

#!/bin/bash
export XMODIFIERS="@im=fcitx"
export QT_IM_MODULE="fcitx"

step2.  WPS表格
sudo gedit /usr/bin/et
export XMODIFIERS="@im=fcitx"
export QT_IM_MODULE="fcitx"

step2.  WPS演示
sudo gedit /usr/bin/wpp
export XMODIFIERS="@im=fcitx"
export QT_IM_MODULE="fcitx"



在以 root 用户为前提下，oh-my-zsh 的安装目录：/root/.oh-my-zsh
在以 root 用户为前提下，Zsh 的配置文件位置：/root/.zshrc
为 root 用户设置 zsh 为系统默认 shell：chsh -s /bin/zsh root
如果你要重新恢复到 bash：chsh -s /bin/bash root


ssh  相关命令：
登录: ssh -p 8822  yaoshun.li@172.16.23.94    Liys123456@
修改密码:passwd yaoshun.li 
查看ssh-server打开与否：ps -e | grep ssh
启动服务：sudo /etc/init.d/ssh start 
sudo /etc/init.d/ssh stop  #server停止ssh服务
sudo /etc/init.d/ssh restart  #server重启ssh服务


cuda版本切换：
sudo rm -rf /usr/local/cuda  #删除之前生成的软链接
sudo ln -s /usr/local/cuda-10.0 /usr/local/cuda #生成新的软链接

#apex 使用cuda11.0编译的时候需要加上下面这句话才能够编译通过。
export TORCH_CUDA_ARCH_LIST="7.5"


查看.so中函数名：nm -D libinference_api.so | awk '{if($2=="T"){print $3}}'


##远程拷贝 eg.
 scp ./hrnetv2_gray_w18_480_640.onnx  ginger@10.12.32.62:/home/ginger/yaoshun.li



最近安装了anaconda，打开终端的时候，一直有一个base，看着很不舒服，要是你也有这样的困惑，只需要下边的两行代码就可以了：
conda config --show | grep auto_activate_base

你会看到 auto_activate_base: True

这时你只需要，运行conda config --set auto_activate_base False就可以禁止了。
还原的话使用conda config --set auto_activate_base True

token test

token（diary）：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


sudo sh cmake-3.25.1-linux-x86_64.sh --prefix=/usr/local --exclude-subdir



/home/robot/Documents/TensorRT-7.2.1.6/bin/trtexec --onnx=./repvgg_deploy_48dim_epoch44_tf_simple.onnx --saveEngine=./repvgg_deploy_48dim_epoch44_tf_simple_out_fp16.trt --fp16 --outputIOFormats=fp32:chw,fp32:chw,fp16:chw


TX2: 插件编译命令
cmake .. -DCMAKE_BUILD_TYPE=Release -DGPU_ARCHS=62 -DTRT_LIB_DIR=/usr/lib/aarch64-linux-gnu -DTRT_PLATFORM_ID=aarch64 -DCUDA_VERSION=10.2 -DCMAKE_C_COMPILER=/usr/bin/gcc -DCMAKE_CXX_COMPILER=/usr/bin/g++


ssh -i /home/robot/.ssh/id_rsa -p 8822 yaoshun.li@172.16.33.7

docker exec -it ubuntu1804_cuda11 bash
持久化数据保存位子:/cloudminds/datas/ubuntu1804_cuda11

docker exec -it ubuntu1804_cuda11_3_gpu0123 bash

docker compose up cuda11_3_ubuntu1804_gpu0123 -d # 重新启动容器
docker compose up 容器名字 -d
docker compose up -d cuda11_3_ubuntu1804_gpu0123

# https://blog.csdn.net/weixin_44336161/article/details/126446338

CommandNotFoundError: Your shell has not been properly configured to use 'conda activate'.
解决办法：source activate，然后再重新 conda activate monosdf


 python -m torch.distributed.launch --nproc_per_node=4 training/trainsdf.py --conf confs/scannet_mlp.conf

 CUDA_VISIBLE_DEVICES=0,1,2,3 python -m torch.distributed.launch --nproc_per_node 4 --nnodes=1 --node_rank=0 training/exp_runner.py --conf confs/scannet_mlp.conf  --scan_id 1


stage0:
python main.py /home/workspace/data/nerfstudio-data-mipnerf360/garden/ --workspace trial_360_garden -O --data_format colmap --bound 16 --enable_cam_center --enable_cam_near_far --scale 0.3 --downscale 4 --stage 0 --lambda_entropy 1e-3 --clean_min_f 16 --clean_min_d 10 --lambda_tv 2e-8 --visibility_mask_dilation 50

stage1:
python main.py /home/workspace/data/nerfstudio-data-mipnerf360/garden/ --workspace trial_360_garden   -O --data_format colmap --bound 16 --enable_cam_center --enable_cam_near_far --scale 0.3 --downscale 4 --stage 1 --iters 10000


ns-extract-mesh --load-config outputs/bakedsdf-mlp/bakedsdf-mlp-canon_office360_v2/bakedsdf-mlp/2023-03-14_143142/config.yml --output-path meshes/bakedsdf-mlp-anon_office360_v2-2048.ply --bounding-box-min -2.0 -2.0 -2.0 --bounding-box-max 2.0 2.0 2.0 --resolution 2048 --marching_cube_threshold 0.001 --create_visibility_mask True


# RuntimeError: Error building extension 'nvdiffrast_plugin'  : apt-get install libegl1-mesa-dev
# [F glutil.cpp:338] eglInitialize() failed :  apt-get install libnvidia-gl-530  (530代表显卡驱动型号)


本地终端：
ssh -L 8083:127.0.0.1:6006 -i /home/data/.ssh/id_rsa haoxin.li@172.16.33.7 -p 8822
本机浏览器：
http://localhost:8083/#timeseries
远端服务器：启动tensorbord


本地终端：
ssh -L 8085:127.0.0.1:6010 -i /home/robot/.ssh/id_rsa yaoshun.li@172.16.33.7 -p 8822
本机浏览器：
http://localhost:8085/#timeseries
远端服务器：启动tensorbord # 不能在docker里面启动


apt install -y psmisc
fuser -v /dev/nvidia0   

下载论文命令
wget --user-agent=Lynx https://xxx.arvix.pdf


分卷压缩:

1.先把源文件压缩个成zip

zip -r b.zip XX

2.根据情况分卷--4g

zip -s 4g b.zip --out c.zip 

分卷解压：

3. 合并文件

zip -s 0 c.zip  --out d.zip

4. 解压

unzip d.zip




gdal osr 等安装后也没法使用，需要下载对应的.whl文件再进行安装。 https://sourceforge.net/p/gdal-wheels-for-linux/activity/?page=0&limit=100#61fb503cf0dbbe9c99453dcd
然后：pip install GDAL-3.4.1-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.whl
from osgeo import gdal
from osgeo import osr


https://github.com/rbonghi/jetson_stats/issues/86
sudo -H pip install --no-cache-dir -U jetson-stats

sudo -H pip3 install -U jetson-stats

sudo -H pip3 install jetson-stats  //安装jetson-stats

jetson-release 

jtop //查看jetson资源的调度

jetson_varibles //查看jetson参数


sudo apt-get install python3-matplotlib
git clone https://github.com/jetsonhacks/gpuGraphTX 利用率代码
cd gpuGraphTX
python3 gpuGraph.py

tegrastats 使用介绍：
https://docs.nvidia.com/jetson/archives/r34.1/DeveloperGuide/text/AT/JetsonLinuxDevelopmentTools/TegrastatsUtility.html
eg:tegrastats --interval 1000 --logfile /data/user/ginger/liys/teg.log


https://nexus.cloudminds.com/repository/pypi-central/simple



import zipfile

zip_path = "/datas/datasets/huggingface/huggingface.zip"
my_zip = zipfile.ZipFile(zip_path, 'r')

sv_path = "/datas/workspaces/"
my_zip.extractall(sv_path)


export PATH=$PATH:$HOME/minio-binaries/



.tar
　　解包：tar xvf FileName.tar
　　打包：tar cvf FileName.tar DirName
　　（注：tar是打包，不是压缩！）
　　———————————————
.gz
　　解压1：gunzip FileName.gz
　　解压2：gzip -d FileName.gz
　　压缩：gzip FileName
.tar.gz 和 .tgz
　　解压：tar zxvf FileName.tar.gz
　　压缩：tar zcvf FileName.tar.gz DirName
　　———————————————
.bz2
　　解压1：bzip2 -d FileName.bz2
　　解压2：bunzip2 FileName.bz2
　　压缩： bzip2 -z FileName
.tar.bz2
　　解压：tar jxvf FileName.tar.bz2 或tar –bzip xvf FileName.tar.bz2
　　压缩：tar jcvf FileName.tar.bz2 DirName
　　———————————————
.bz
　　解压1：bzip2 -d FileName.bz
　　解压2：bunzip2 FileName.bz
　　压缩：未知
.tar.bz
　　解压：tar jxvf FileName.tar.bz
　　压缩：未知
　　———————————————
.Z
　　解压：uncompress FileName.Z
　　压缩：compress FileName
.tar.Z
　　解压：tar Zxvf FileName.tar.Z
　　压缩：tar Zcvf FileName.tar.Z DirName
　　———————————————
.zip
　　解压：unzip FileName.zip
　　压缩：zip FileName.zip DirName
　　压缩一个目录使用 -r 参数，-r 递归。例： $ zip -r FileName.zip DirName
　　———————————————
.rar
　　解压：rar x FileName.rar
　　压缩：rar a FileName.rar DirName

看看你要解压的文件的具体路径
tar -ztf xx.tar.gz | grep file_you_want_to_get 
假设为 path/to/file
tar -zxf xx.tar.gz path/to/file



mc 拷贝数据
1. 复制配置 并在cmd中运行
2. 复制示例，并在cmd中运行，找到需要下载文件得名称
3. mc cp -r  our-sdf-data/dataset-harix-our-sdf-data/our_sdf_data/qiyehao/qiyehao_jiehu_normal_0518_depth_normal.tar ./


PAI平台使用:
conda create -p /datas/workspace/tool/dt_nerf python==3.8  # -p 表示安装路径
conda create -p /datas/workspaces/conda_envs/dt_nerf --clone dt_nerf  # 表示克隆路径
激活方式： conda activate /datas/workspaces/conda_envs/dt_nerf



Could not find compatible tinycudann extension for compute capability 80.  将tiny-cuda-nn 切换到commit点:b916a481d943a9a29d7aaa9519d7024395e98c1c,
设置环境变量
# Set environment variables.
## Set non-interactive to prevent asking for user inputs blocking image creation.
export DEBIAN_FRONTEND=noninteractive
## Set timezone as it is required by some packages.
export TZ=Europe/Berlin
## CUDA architectures, required by tiny-cuda-nn.
export TCNN_CUDA_ARCHITECTURES=80 # 报错缺啥就写啥
## CUDA Home, required to find CUDA in some packages.
export CUDA_HOME="/usr/local/cuda"



切换ubuntu18.04 默认python
sudo update-alternatives --install /usr/bin/python python /usr/bin/python2 100
sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 150

sudo update-alternatives --config python

同时在zshrc中添加 alias python='/usr/bin/python'


vscode sticky Scroll 功能设置，滚动显示函数名。


cityscapes 命令行下载

wget --keep-session-cookies --save-cookies=cookies.txt --post-data 'username=cityscapes123&password=Liys@1234&submit=Login' https://www.cityscapes-dataset.com/login/

wget --load-cookies cookies.txt --content-disposition https://www.cityscapes-dataset.com/file-handling/?packageID=改成自己想下载的数据集的ID数字


3090 8卡服务器

ssh -l yaoshun.li 172.16.23.120 -p 10022
ssh -l yaoshun.li 172.16.23.112 -p 22

export PATH=/home/yaoshun.li/anaconda3/bin:$PATH
export PATH=/usr/local/cuda-11.3/bin:$PATH
export LD_LIBRARY_PATH=/usr/local/cuda-11.3/lib64:$LD_LIBRARY_PATH
export LIBRARY_PATH=/usr/local/cuda-11.3/lib64:$LIBRARY_PATH



vscode  远程连接卡顿解决：
1. 在远程服务器上进入 cd ~/.vscode-server/bin，然后找到如:f1b07bd25dfad64b0167beb15359ae573aecd2cc的ID，然后运行wget https://update.code.visualstudio.com/commit:f1b07bd25dfad64b0167beb15359ae573aecd2cc/server-linux-x64/stable
2.cd ~/.vscode-server/bin
3.tar -zxf vscode-server-linux-x64.tar.gz
4.mv vscode-server-linux-x64 ${commit_id}


ImportError: /lib/x86_64-linux-gnu/libc.so.6: version `GLIBC_2.32' not found (required by /datas/workspaces/conda_envs/DVIS/lib/python3.8/site-packages/detectron2/_C.cpython-38-x86_64-linux-gnu.so)
解决方案: https://blog.csdn.net/qq_30374237/article/details/122346535

自己的解决方案: 自己编译detectron2 ，克隆代码再编译




编译hdmap报grpc没有安装或者找不到，使用命令:apt install ros-melodic-grpc解决


 Could not find a package configuration file provided by "gps_common" with
  any of the following names:

  sudo apt-get install gnat-gps-common